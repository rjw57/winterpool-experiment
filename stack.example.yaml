---
# Example stack for deployment on our local usvc stack. Will spin up the tool in
# loop mode.
#
# On first deployment, the authorisation flow must be completed proxying the
# HTTP server locally using something like mitmproxy:
#
#   mitmproxy -p 8080 --mode reverse:https://pool.swarm.usvc.gcloud.automation.uis.cam.ac.uk/
#
# The Google client id and secret JSON must be present in a docker secret called
# "winter-pool-client-secrets" and the jobspec is in a config called
# "winter-pool-example-jobspec" The jobspec should include the following:
#
#   client_secrets_path: "/client_secrets.json"
#   store_path: "/store"
#
version: '3.5'

networks:
  traefik:
    name: traefik-net
    external: true

configs:
  jobspec:
    name: winter-pool-example-jobspec
    external: true

secrets:
  client-secrets:
    external: true
    name: winter-pool-client-secrets

volumes:
  token-store:

services:
  tool:
    image: rjw57/winterpool-experiment
    command: [
      "--spec=/jobspec.yaml",
      "--auth-bind=0.0.0.0",
      "--loop",
      "--loop-sleep=600"
    ]
    deploy:
      labels:
        - "traefik.port=8080"
        - "traefik.frontend.rule=Host:pool.swarm.usvc.gcloud.automation.uis.cam.ac.uk"
      replicas: 2
    configs:
      - source: jobspec
        target: /jobspec.yaml
    secrets:
      - source: client-secrets
        target: /client_secrets.json
    volumes:
      - token-store:/store
    networks:
      - traefik
